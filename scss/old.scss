
@use "_palette";
@use "_cells";
@use "_grid";

html {
  box-sizing: border-box;
}

*, *::before, *::after {
  box-sizing: inherit;
}

@include grid.app-mixin;

@include grid.factor-row-mixin;

@include grid.factor-col-mixin;

@include grid.product-mixin;

@include grid.keypad-mixin;

.product > *,
.factor-row > *,
.factor-col > *,
.keypad > *,
.operation,
.control,
.time {
  height: 65px;
  width: 65px;
  padding: 2px;
  float: left;
  background-color: nth(palette.$lights, 1);
  opacity: .33;
  border-radius: 8px;
  line-height: 57px;
  text-align: center;
  color: nth(palette.$darks, 1);
  font-size: 50px;
  font-family: sans-serif;
  font-weight: 900;
}

.opacity-33 {
}

.opacity-1 {
  opacity: 1;
}

.cell-font-medium {
  font-size: 35px;
}

.background-clear, 
.border-width-thin, 
.border-width-thick {
  background-color: nth(palette.$lights, 1) !important;
}

.border-width-thin {
  border-width: 8px !important;
}

.border-width-thick {
  border-width: 20px !important;
}

@include cells.background-color-mixin;

@include cells.border-color-mixin;

@use "palette";

@mixin app-mixin {
  $areas: ();
  @for $i from 1 through 11 {
    $nested: "";
    @for $j from 1 through 13 {
      $name: "...";
      @if $i == 1 and $j == 1 {
        $name: "operation";
      }
      @else if $j == 1 and $i <= 11 {
        $name: "factor-row";
      }
      @else if $i == 1 and $j <= 11 {
        $name: "factor-col";
      }
      @else if $i <= 11 and $j <= 11 {
        $name: "product";
      }
      @else if $j == 12 {
        // $name: "...";
      }
      @else if $i == 1 {
        $name: "control";
      }
      @else if $i >= 4 and $i <= 8 {
        $name: "keypad";
      }
      @else if $i == 11 {
        $name: "time";
      }
      $name: $name + " ";
      $nested: $nested + $name;
    }
    $nested: str-slice($nested, 1, -2);
    $areas: append($areas, $nested);
  }

  .app {
    display: grid;
    height: 759px;
    width: 897px;
    grid-gap: 4px;
    grid-template-rows: repeat(11, 65px);
    grid-template-columns: repeat(13, 65px);
    grid-template-areas: $areas;
    background-color: nth(palette.$lights, 1);
  }

  .operation {
    grid-area: operation;
    background-color: red !important;
  }
  
  .control {
    grid-area: control;
    background-color: yellow !important;
  }
  
  .time {
    grid-area: time;
    background-color: indigo !important;
  }
}

@mixin factor-row-mixin { 
  $areas: ();
  @for $i from 1 through 10 {
    $nested: "factor-row-" + inspect($i) + " "; 
    $areas: append($areas, $nested); 
  }
  .factor-row {
    grid-area: factor-row;
    display: grid;
    grid-gap: 4px;
    grid-template-rows: repeat(10, 65px);
    grid-template-columns: 65px;
    grid-template-areas: $areas;
    background-color: purple;
  }

  @for $i from 1 through 10 {
    .factor-row-#{$i} {
      grid-area: factor-row-#{$i};
    }
  }
}

@mixin factor-col-mixin { 
  $areas: "";
  @for $i from 1 through 10 {
    $areas: $areas + "factor-col-" + inspect($i) + " "; 
  }
  $areas: str-slice($areas, 1, -2);
  .factor-col {
    grid-area: factor-col;
    display: grid;
    grid-gap: 4px;
    grid-template-rows: 65px;
    grid-template-columns: repeat(10, 65px);
    grid-template-areas: $areas;
    background-color: blue;
  }

  @for $i from 1 through 10 {
    .factor-col-#{$i} {
      grid-area: factor-col-#{$i};
    }
  }
}

@mixin product-mixin { 
  $areas: ();
  @for $i from 1 through 10 {
    $nested: "";
    @for $j from 1 through 10 {
      $nested: $nested + "product-" + inspect($i) + "-" + inspect($j) + " "; 
    }
    $nested: str-slice($nested, 1, -2);
    $areas: append($areas, $nested);
  }

  .product {
    grid-area: product;
    display: grid;
    grid-gap: 4px;
    grid-template-rows: repeat(10, 65px);
    grid-template-columns: repeat(10, 65px);
    grid-template-areas: $areas;
    background-color: green;
  }

  @for $i from 1 through 10 {
    @for $j from 1 through 10 {
      .product-#{$i}-#{$j} {
        grid-area: product-#{$i}-#{$j};
      }
    }
  }
}

@mixin keypad-mixin { 
  $areas: ();
  @for $i from 1 through 5 {
    $nested: "keypad-" + inspect($i) + " "; 
    $areas: append($areas, $nested); 
  }

  .keypad {
    grid-area: keypad;
    display: grid;
    grid-gap: 4px;
    grid-template-rows: repeat(5, 65px);
    grid-template-columns: 65px;
    grid-template-areas: $areas;
    background-color: orange;
  }

  @for $i from 1 through 5 {
    .keypad-#{$i} {
      grid-area: keypad-#{$i};
    }
  }
}

