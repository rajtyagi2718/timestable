$cell-colors: #BEC2CB, #F8EECA, #F5DC9A, #8EB155, #497367, 
              #2B3F00, #764000, #E19E57, #010570, #3266B2,
              #B8F7FE;

$colors: white;

html {
  box-sizing: border-box;
}

*, *::before, *::after {
  box-sizing: inherit;
}

  

@mixin app-grid-creator {
  $areas: ();
  @for $i from 1 through 11 {
    $nested: "";
    @for $j from 1 through 13 {
      $chr: "...";
      @if $i == 1 and $j == 1 {
        $chr: "operation";
      }
      @else if $i == 1 and $j <= 11 {
        $chr: "factor-col-grid";
      }
      @else if $j == 1 and $i <= 11 {
        $chr: "factor-row-grid";
      }
      @else if $i <= 11 and $j <= 11 {
        $chr: "product-grid";
      }
      @else if $j == 12 {
        // $chr: "...";
      }
      @else if $i == 1 {
        $chr: "control";
      }
      @else if $i >= 4 and $i <= 8 {
        $chr: "keypad";
      }
      @else if $i == 11 {
        $chr: "time";
      }
      $chr: $chr + " ";
      $nested: $nested + $chr;
    }
    $nested: str-slice($nested, 1, -2);
    $areas: append($areas, $nested);
  }
  .app-grid {
    display: grid;
    height: 759px;
    width: 897px;
    grid-gap: 4px;
    grid-template-rows: repeat(11, 65px);
    grid-template-columns: repeat(13, 65px);
    grid-template-areas: $areas;
  }
}
   
@include app-grid-creator;

.control {
  grid-area: control;
  background-color: red;
}

// .app > * {
//   height: 65px;
//   width: 65px;
//   padding: 2px;
//   float: left;
//   background-color: rgba(111,41,97,.4);
//   // background-color: nth($colors, 1);
//   opacity: .33;
//   border-radius: 8px;
//   line-height: 57px;
//   text-align: center;
//   color: nth($colors, 1);
//   font-size: 50px;
//   font-family: sans-serif;
//   font-weight: 900;
// }

@mixin factor-col-grid-creator { 
  $areas: "";
  @for $i from 1 through 10 {
    $areas: $areas + "factor-col-" + inspect($i) + " "; 
  }
  $areas: str-slice($areas, 1, -2);
  .factor-col-grid {
    grid-area: factor-col-grid;
    display: grid;
    grid-gap: 4px;
    grid-template-rows: repeat(10, 65px);
    grid-template-columns: 65px;
    grid-template-areas: $areas;
  }
}

@include factor-col-grid-creator;

.factor-col-5 {
  grid-area: factor-col-grid;
  background-color: blue;
}

@mixin product-grid-creator { 
  $areas: ();
  @for $i from 1 through 10 {
    $nested: "";
    @for $j from 1 through 10 {
      $nested: $nested + "product-" + inspect($i) + "-" + inspect($j) + " "; 
    }
    $nested: str-slice($nested, 1, -2);
    $areas: append($areas, $nested);
  }
  .product-grid {
    grid-area: product-grid;
    display: grid;
    grid-gap: 4px;
    grid-template-rows: repeat(10, 65px);
    grid-template-columns: repeat(10, 65px);
    grid-template-areas: $areas;
  }
}

@include product-grid-creator;

.product-1-2 {
  grid-area: product-grid;
  background-color: green;
}

.opacity-33 {
}

.opacity-1 {
  opacity: 1;
}

.cell-font-medium {
  font-size: 35px;
}

.background-clear, 
.border-width-thin, 
.border-width-thick {
  background-color: nth($colors, 1) !important;
}

.border-width-thin {
  border-width: 8px !important;
}

.border-width-thick {
  border-width: 20px !important;
}

@mixin background-color-i-list {
  @for $i from 1 through length($cell-colors) {
    .background-color-#{$i - 1} {
      background-color: nth($cell-colors, $i);
    }
  }
}

@mixin border-color-i-list {
  @for $i from 1 through length($cell-colors) {
    .border-color-#{$i - 1} {
      border-color: nth($cell-colors, $i); 
      border-style: solid;
      border-width: 0px;
    }
  }
}

@include background-color-i-list;
@include border-color-i-list;
